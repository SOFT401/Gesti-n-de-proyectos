{% extends '_layouts/index.twig' %}

{% block headext %}
    {{ css('jquery.validate.password.css') }}
    {{ extcss('chosen-bootstrap/chosen/chosen.css') }}
    {{ extcss('bootstrap-tree/bootstrap-tree/css/bootstrap-tree.css') }}
{% endblock %}
{% block content %}
{% import '_tools/formElements.twig' as forms %}
<div class="row-fluid">
    <div class="widget span12">
        <div class="widget-title">
            <h4>{{ lang('py_projects') }}</h4>
            <span class="tools">
                <a href="#" class=""><i class="icon-chevron-down"></i></a>
                <a href="#" class=""><i class="icon-plus" title="{{ lang('py_addnew') }}"></i></a>
            </span>
        </div>
        <div class="widget-body">
            <div class="widget-form box box-content" style="display:none;">
				<i class="icon-remove closeaddform" style="float:right"></i>
				<form id="addproject" class="form-horizontal" method="post">
				    {{ forms.campo({'tipo':'input','type':'hidden','name':'id'}) }}
					{{ forms.campo({'tipo':'input','type':'text','name':'name','label':lang('name'),'maxlength':45}) }}
					{{ forms.campo({'tipo':'input','type':'text','name':'description','label':lang('description'),'maxlength':255}) }}
					<div class="form-actions">
						<p class="center span5">
                      	   <button type="submit" name="submit" class="btn btn-primary" value="send">{{ lang('send') }}</button>
	                       <button class="btn formcancelar">{{ lang('cancel') }}</button>
                   		</p>
                   	</div>
				</form>
			</div>
            <table id="tableprojects" class="table table-striped table-bordered bootstrap-datatable tabledata" style="width:100%;">
                <thead>
                    <tr>
                        <th data-priority="persistent">{{ lang('actions') }}<b></b></th>
                        <th>{{ lang('name') }}</th>
                        <th>{{ lang('description') }}</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="row-fluid">
    <div class="span12">
        <form id="loaded_project">
            <input type="hidden" name="projectid" />
            <div class="container center"><h1></h1></div>
            <div class="container"><p></p></div>
        </form>
    </div>
</div>
<div class="row-fluid">
    <div class="span3">
        <div class="widget">
            <div class="widget-title">
	            <h4>{{ lang('py_structure') }}</h4>
	            <span class="tools">
	                <a href="#" class=""><i class="icon-chevron-down"></i></a>
	                <a href="javascript:void(0)" class=""><i class="icon-plus" title="{{ lang('py_addphase') }}"></i></a>
	            </span>
            </div>
            <div class="widget-body">
	            <div class="widget-form box box-content" style="display:none;">
	                <i class="icon-remove closeaddform" style="float:right"></i>
					<form id="addphase" class="form-vertical" method="post">
					    {{ forms.campo({'tipo':'input','type':'hidden','name':'projectid'}) }}
					    {{ forms.campo({'tipo':'input','type':'hidden','name':'id'}) }}
						{{ forms.campo({'tipo':'input','type':'text','name':'name','label':lang('name'),'maxlength':20,'class':'input-large'}) }}
						<div class="form-actions">
							<p class="center span5">
	                      	   <button type="submit" name="submit" class="btn btn-primary" value="send">{{ lang('send') }}</button>
	                      	   <button class="btn formcancelar" style="display:none;">{{ lang('cancel') }}</button>
	                   		</p>
	                   	</div>
					</form>
				</div>
				<div class="">
				    <div class="actions">
                        <a class="btn btn-small btn-success" id="tree_1_collapse" href="javascript:;"> Collapse All</a>
                        <a class="btn btn-small btn-warning" id="tree_1_expand" href="javascript:;"> Expand All</a>
                    </div>
                    <div class="tree-container">
                    </div>
                    
				</div>
            </div>
        </div>
    </div>
    <div class="span9">
        <div class="widget">
            <div class="widget-title">
                <h4 id="Current_branch"></h4>
            </div>
            <div class="widget-body">
                <div class="phase_container">
                </div>
                <div class="subphase_container">
                </div>
                <div class="deliver_container">
                </div>
                <div class="package_container">
                </div>
                <div class="activity_container">
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}
{% block jscode %}
{{ js('jquery.validate.min.js') }}
{{ js('jquery.validate.password.js') }}
{{ extjs('chosen-bootstrap/chosen/chosen.jquery.min.js') }}
{{ extjs('data-tables/jquery.dataTables.js') }}
{{ extjs('data-tables/DT_bootstrap.js') }}
{{ extjs('bootstrap-tree/bootstrap-tree/js/bootstrap-tree.js') }}
{{ js('tree.js') }}
<script type="text/javascript">
$(document).ready(function() {
    $('.resetform').click(function(){
        resetForm($(this).closest('.widget-form').find('form'));
        $(this).closest('.widget').find('.widget-form').find('form').find('input[name=id]').val(0);
    });
    $('.closeaddform').click(function(){
        $('.formcancelar').trigger('click');
    });
    $('.formcancelar').on('click',function(){
        resetForm($(this).closest('form'));
        $(this).closest('form').find('input[name=id]').val(0);
        $(this).closest('.widget').find('.widget-form').slideUp();
    });
    $('#addphase').validate({
        errorClass:'errorlabelform',
        elErrorClass:'errorlabel',
        rules : {
            name:{
                required :true,
                minlength :5,
            }
        },
        messages : {
            name:{
                required : '{{ lang('auth_required') }}',
                minlength : '{{ lang('auth_tooshort') }}',
            }
        },
        submitHandler: function(form) {
            data = $(form).serializeObject();
            if(data.projectid<1){
                notify({'msj':'{{ lang('py_shouldselected') }}','type':'error'})
            }else{
	    		$.ajax({
	    		    type:"POST",
	                url: '{{ site_url('project/addphase') }}',
	                dataType:'json',
	                data: data,
	                error:function (jqXHR, textStatus, errorThrown) {
	                    console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
	                }
	            }).done(function(data){
					if (data.notify){
						notify({'msj':data.msj,'type':data.notytype})
					}
					$('#addphase').find('.formcancelar').trigger('click');
					resetForm($('#addphase'));
					$('#addphase').find('input[name=id]').val(0);
					loadProjectTree($('#addphase').find('input[name=projectid]').val());
	    		});
            }
        },
    });
    $('#addproject').validate({
        errorClass:'errorlabelform',
        elErrorClass:'errorlabel',
        ignore:':hidden.chzn',
        rules : {
            name:{
                required :true,
                minlength :5,
            },
            description:{
                required :true,
                minlength :5,
            }
        },
        messages : {
            name:{
                required : '{{ lang('auth_required') }}',
                minlength : '{{ lang('auth_tooshort') }}',
            },
            description:{
                required : '{{ lang('auth_required') }}',
                minlength : '{{ lang('auth_tooshort') }}',
            }
        },
        submitHandler: function(form) {
    		$.ajax({
                type:"POST",
                url: '{{ site_url('project/editproject') }}',
                dataType:'json',
                data: $(form).serializeObject(),
                error:function (jqXHR, textStatus, errorThrown) {
                    console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                }
            }).done(function(data){
				if (data.notify){
					notify({'msj':data.msj,'type':data.notytype})
				}
				$('.formcancelar').trigger('click');
				resetForm($('#formulario'));
				$('#formulario').find('input[name=id]').val(0);
				loadProjects();
			});
    	}
    });
    $('[data-rel="chosen"],[rel="chosen"]').chosen({"no_results_text":"{{ lang('noresults') }}",disable_search_threshold: 10});

    var tableprojects = $('#tableprojects').dataTable({
        "sDom": "<'row-fluid'<'span6'l><'span6'f>r>t<'row-fluid'<'span12'i><'row-fluid'<'span12 center'p>>",
        "sPaginationType": "bootstrap",
        "oLanguage": {
            "sProcessing": "{{ lang('table_processing') }}",
            "sLengthMenu": "{{ lang('table_recordsperpage') }}",
            "sZeroRecords": "{{ lang('table_noregisters') }}",
            "sEmptyTable": "{{ lang('table_empty') }}",
            "sInfo": "{{ lang('table_pager') }}",
            "sInfoEmpty": "{{ lang('table_pagerempty') }}",
            "sInfoFiltered": "{{ lang('table_filtered') }}",
            "sSearch": "{{ lang('table_search') }}",
            "sLoadingRecords": "{{ lang('table_loading') }}",
            "oAria": {
                "sSortAscending": "{{ lang('table_sortAsc') }}",
                "sSortDescending": "{{ lang('table_sortDesc') }}",
            },
            "oPaginate": {
                "sFirst": "{{ lang('table_first') }}",
                "sLast": "{{ lang('table_last') }}",
                "sNext": "{{ lang('table_next') }}",
                "sPrevious": "{{ lang('table_previous') }}",
            },
        }
    });
    function loadProjects(){
        $.ajax({
        	type:"POST",
            url: '{{ site_url('project/loadprojects') }}',
            dataType:'json',
            error:function (jqXHR, textStatus, errorThrown) {
            	console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
            }
            }).done(function(data){
                tableprojects.fnClearTable();
            	for (key in data.data){
            	  htmledit='';
	              htmledit+= '<a class="btn btn-info edit_project" data-id="'+data.data[key].id+'" href="javascript:void()"><i class="icon-edit icon-white" title="{{ lang('edit') }}"></i></a>';
	              htmledit+= '<a class="btn btn-info admin_project" data-id="'+data.data[key].id+'" href="javascript:void()"><i class="icon-book icon-white" title="{{ lang('manage') }}"></i></a>';
	              row= Array();
	              row[0]=htmledit;
	              row[1]=data.data[key].name;
	              row[2]=data.data[key].description;
                  tableprojects.fnAddData( row );
            	}
				dom_tableprojects();
				tableprojects.fnDraw();
        });
    }
    function loadProjectTree(projectid){
        $.ajax({
        	type:"POST",
            url: '{{ site_url('project/getProjectTree') }}',
            dataType:'json',
            data:{id:projectid},
            error:function (jqXHR, textStatus, errorThrown) {
            	console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
            }
            }).done(function(data){
                Draw_ProjectTree(data.tree);
            });
    }
    function Draw_ProjectTree(tree){
        console.log(tree);
        html='<ul id="tree_1" class="tree">';
        for (var phaseid in tree){
            html+='<li><a href="javascript:void(0)" data-toggle="branch" class=" tree-toggle" data-role="branch" ><span class="py_phase" data-id="'+phaseid+'">'+tree[phaseid].name+'</span></a><ul class="branch in">';
            for(var subfaseid in tree[phaseid].subphases){
                html+='<li><a href="javascript:void(0)" data-toggle="branch" class=" tree-toggle" data-role="branch" ><span class="py_subphase" data-id="'+subfaseid+'">'+tree[phaseid].subphases[subfaseid].name+'</span></a><ul class="branch">';
                for(var delivid in tree[phaseid].subphases[subfaseid]['deliv']){
                    html+='<li><a href="javascript:void(0)" data-toggle="branch" class=" tree-toggle" data-role="branch" ><span class="py_deliv" data-id="'+delivid+'">'+tree[phaseid].subphases[subfaseid]['deliv'][delivid].name+'</span></a><ul class="branch">';
                    for(var packid in tree[phaseid].subphases[subfaseid]['deliv'][delivid].packages){
                        html+='<li><a href="javascript:void(0)" data-toggle="branch" class=" tree-toggle" data-role="branch" ><span class="py_pack" data-id="'+packid+'">'+tree[phaseid].subphases[subfaseid]['deliv'][delivid].packages[packid].name+'</span></a><ul class="branch">';
                        for (var actid in tree[phaseid].subphases[subfaseid]['deliv'][delivid].packages[packid].activities){
                            html+='<li><a href="javascript:void(0)" class=" tree-toggle" data-role="branch" ><span class="py_act" data-id="'+actid+'">'+tree[phaseid].subphases[subfaseid]['deliv'][delivid].packages[packid].activities[actid]+'</span></a></li>';
                        }
                        html+='</ul></li>';
                    }
                    for (var actid in tree[phaseid].subphases[subfaseid]['deliv'][delivid].activities){
                        html+='<li><a href="javascript:void(0)" class="tree-toggle" data-role="branch" ><span class="py_act" data-id="'+packid+'">'+tree[phaseid].subphases[subfaseid]['deliv'][delivid].activities[actid]+'</span></a></li>';
                    }
                    html+='</ul></li>';
                }
                html+='</ul></li>';
            }
            html+='</ul></li>';
        }
        html+='</ul>';
        $('.tree-container').html(html);
        dom_project();
    }
    function dom_tableprojects(){
        $('.edit_project').on('click',function(){
            $.ajax({
            	type:"POST",
                url: '{{ site_url('project/geteditproject') }}',
                dataType:'json',
                data:{id:$(this).attr('data-id')},
                error:function (jqXHR, textStatus, errorThrown) {
                	console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                }
                }).done(function(data){
                    $('#addproject').closest('.widget').find('.icon-plus').trigger('click');
                    $('#addproject').find('input[name=id]').val(data.id);
                    $('#addproject').find('input[name=name]').val(data.data.name);
                    $('#addproject').find('input[name=description]').val(data.data.description);
                    Draw_ProjectTree(data.tree);
                });
        });
        $('.admin_project').on('click',function(){
            $.ajax({
            	type:"POST",
                url: '{{ site_url('project/loadproject') }}',
                dataType:'json',
                data:{id:$(this).attr('data-id')},
                error:function (jqXHR, textStatus, errorThrown) {
                	console.log(JSON.stringify(jqXHR) + ' ' + textStatus + '  ' + errorThrown);
                }
                }).done(function(data){
                    $('#addphase').find('input[name=projectid]').val(data.id);
                    $('#loaded_project').find('h1').html(data.data.name);
                    $('#loaded_project').find('p').html(data.data.description);
                    Draw_ProjectTree(data.tree);
                });
        });
    }
    function dom_project(){
        // cargar acciones de la faase o subfase...
        $('.py_phase').click(function(){
            
        });
        $('.py_subphase').click(function(){
            
        });
        $('.py_deliv').click(function(){
            
        });
        $('.py_pack').click(function(){
            
        });
        $('.py_act').click(function(){
            
        });
    }
    loadProjects();
});
</script>
{% endblock %}